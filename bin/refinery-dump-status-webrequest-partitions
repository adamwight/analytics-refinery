#!/bin/bash

set -e

print_help() {
    cat <<EOF
$0 [ OPTIONS ] [ HOURS_TO_GO_BACK ]

dumps the status of the raw webrequest partitions for the last few hours.

Options:
  --hdfs-mount MOUNT_POINT
                  -- Assume that HDFS is mounted at MOUNT_POINT (needs
                     to be an absolute path) instead of /mnt/hdfs .
  --quiet         -- Only produce output, if there are faulty partitions

HOURS_TO_GO_BACK  -- number of hours to go back in time. (Default: 51)

EOF
}


HOUR_OFFSET_MAX=51
HOUR_OFFSET_MIN=3

HDFS_MOUNT_DIR_ABS=/mnt/hdfs

HAS_FAULTY=
QUIET=
QUIET_BUFFER=

error() {
    echo "Error" "$@" >&2
    exit 1
}

while [ $# -gt 0 ]
do
    PARAM="$1"
    shift
    case "$PARAM" in
        "--help" | "-h" | "-?" )
            print_help
            exit 1
            ;;
        "--hdfs-mount" )
            [[ $# -gt 0 ]] || error "$PARAM expects a further parameter"
            HDFS_MOUNT_DIR_ABS="$1"
            shift
            ;;
        "--quiet" )
            QUIET=yes
            ;;
        * )
            if [ $# -eq 0 ]
            then
                HOUR_OFFSET_MAX="$PARAM"
            else
                error "Too many parameters given"
            fi
            ;;
    esac
done

WEBREQUEST_DATA_DIR_ABS="$HDFS_MOUNT_DIR_ABS/wmf/data/raw/webrequest"
WEBREQUEST_STATISTICS_DIR_ABS="$HDFS_MOUNT_DIR_ABS/wmf/data/raw/webrequests_faulty_hosts"

log_no_lf() {
    if [ -n "$QUIET" ]
    then
        QUIET_BUFFER="$QUIET_BUFFER$@"
        if [ -n "$HAS_FAULTY" ]
        then
            echo -n "$QUIET_BUFFER"
            QUIET_BUFFER=
        fi
    else
        echo -n "$@"
    fi
}

log() {
    log_no_lf "$@
"
}

hline() {
    log "  +------------------+--------+--------+--------+--------+--------+"
}

log_partition_status() {
    local DATE_HDFS_PADDED="$1"
    local SOURCE="$2"
    local STATUS="X"

    local DATE_HDFS_UNPADDED="${DATE_HDFS_PADDED///0//}"

    STATISTICS_FILE_ABS="$WEBREQUEST_STATISTICS_DIR_ABS/$SOURCE/$DATE_HDFS_UNPADDED/000000_0"
    if [ -e "$STATISTICS_FILE_ABS" -a ! -s "$STATISTICS_FILE_ABS" ]
    then
        STATUS="."
    else
        if [ -e "$WEBREQUEST_DATA_DIR_ABS/webrequest_$SOURCE/hourly/$DATE_HDFS_PADDED/_SUCCESS" ]
        then
            STATUS="M"
        else
            STATUS="X"
            HAS_FAULTY=yes
        fi
    fi
    log_no_lf "$STATUS"
}

hline
log "  | Date             |  bits  |  misc  | mobile |  text  | upload |"
hline

for HOURS_OFFSET in $(seq $HOUR_OFFSET_MAX -1 $HOUR_OFFSET_MIN )
do
    DATE="$(date --utc -d "$HOURS_OFFSET hours-ago" +'%Y-%m-%dT%H/1H')"
    DATE_HDFS_PADDED="$(date --utc -d "$HOURS_OFFSET hours ago" +'%Y/%m/%d/%H')"
    log_no_lf "  | $DATE |"
    for SOURCE in bits misc mobile text upload
    do
        log_no_lf "    "
        log_partition_status "$DATE_HDFS_PADDED" "$SOURCE"
        log_no_lf "   |"
    done
    log
done

hline

log "

Statuses:

  . --> Partition is ok
  M --> Partition manually marked ok
  X --> Partition is not ok (duplicates, missing, or nulls)


"
